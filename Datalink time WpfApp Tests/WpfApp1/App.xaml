<Application x:Class="WpfApp1.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfApp1"             
             xmlns:evokeControls="clr-namespace:WpfApp1.EvokeControls"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:model="clr-namespace:WpfApp1.Models"
             StartupUri="CustomSeaarchableWindow.xaml"
             xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  mc:Ignorable="PresentationOptions">
    <Application.Resources>
        <!--<ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="\Assets\Xaml\ReferralIcon.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>-->

        <evokeControls:ThreeDotsLoader IsLoading="True" Color="Black" Width="100px" Duration="0:0:1.0" x:Key="demo1"/>

        <ControlTemplate x:Key="ConditionGapIconKey">
            <Viewbox Stretch="Uniform">
                <Canvas UseLayoutRounding="False" Width="31.0" Height="42.0">
                    <Canvas.Clip>
                        <RectangleGeometry Rect="0.0,0.0,31.0,42.0"/>
                    </Canvas.Clip>
                    <Canvas UseLayoutRounding="False">
                        <Canvas UseLayoutRounding="False">
                            <Path Fill="{TemplateBinding Foreground}">
                                <Path.Data>
                                    <PathGeometry Figures="M 8.25006 3.15 C 8.25006 1.41031 9.66032 0 11.4001 0 H 19.8001 C 21.5398 0 22.9501 1.41031 22.9501 3.15 V 5.25 C 22.9501 6.98974 21.5398 8.4 19.8001 8.4 H 11.4001 C 9.66032 8.4 8.25006 6.98974 8.25006 5.25 V 3.15 Z M 11.4001 2.1 C 10.8201 2.1 10.3501 2.57011 10.3501 3.15 V 5.25 C 10.3501 5.82989 10.8201 6.3 11.4001 6.3 H 19.8001 C 20.38 6.3 20.8501 5.82989 20.8501 5.25 V 3.15 C 20.8501 2.57011 20.38 2.1 19.8001 2.1 H 11.4001 Z"/>
                                </Path.Data>
                            </Path>
                            <Path Fill="{TemplateBinding Foreground}">
                                <Path.Data>
                                    <PathGeometry Figures="M 4.04999 5.24996 C 3.47008 5.24996 2.99999 5.72007 2.99999 6.29996 V 38.85 C 2.99999 39.4299 3.47008 39.9 4.04999 39.9 H 27.15 C 27.7299 39.9 28.2 39.4299 28.2 38.85 V 6.29996 C 28.2 5.72007 27.7299 5.24996 27.15 5.24996 H 21.9 V 3.14996 H 27.15 C 28.8897 3.14996 30.3 4.56027 30.3 6.29996 V 38.85 C 30.3 40.5897 28.8897 42 27.15 42 H 4.04999 C 2.31025 42 0.899994 40.5897 0.899994 38.85 V 6.29996 C 0.899994 4.56027 2.31025 3.14996 4.04999 3.14996 H 9.29999 V 5.24996 H 4.04999 Z"/>
                                </Path.Data>
                            </Path>
                            <Path Fill="{TemplateBinding Foreground}">
                                <Path.Data>
                                    <PathGeometry Figures="M 7.19989 24.1501 C 7.19989 23.5701 7.66998 23.1001 8.24989 23.1001 H 22.9499 C 23.5298 23.1001 23.9999 23.5701 23.9999 24.1501 C 23.9999 24.73 23.5298 25.2001 22.9499 25.2001 H 8.24989 C 7.66998 25.2001 7.19989 24.73 7.19989 24.1501 Z"/>
                                </Path.Data>
                            </Path>
                            <Path Fill="{TemplateBinding Foreground}">
                                <Path.Data>
                                    <PathGeometry Figures="M 7.19989 29.4001 C 7.19989 28.8201 7.66998 28.3501 8.24989 28.3501 H 22.9499 C 23.5298 28.3501 23.9999 28.8201 23.9999 29.4001 C 23.9999 29.98 23.5298 30.4501 22.9499 30.4501 H 8.24989 C 7.66998 30.4501 7.19989 29.98 7.19989 29.4001 Z"/>
                                </Path.Data>
                            </Path>
                            <Path Fill="{TemplateBinding Foreground}">
                                <Path.Data>
                                    <PathGeometry Figures="M 7.19989 34.6501 C 7.19989 34.0701 7.66998 33.6001 8.24989 33.6001 H 22.9499 C 23.5298 33.6001 23.9999 34.0701 23.9999 34.6501 C 23.9999 35.23 23.5298 35.7001 22.9499 35.7001 H 8.24989 C 7.66998 35.7001 7.19989 35.23 7.19989 34.6501 Z"/>
                                </Path.Data>
                            </Path>
                        </Canvas>
                        <Path Fill="{TemplateBinding Foreground}">
                            <Path.Data>
                                <PathGeometry Figures="M 11.9093 10.5 L 14.0819 17.1225 L 16.7406 14.1455 H 22.3737 C 22.9405 14.1455 23.4 14.5457 23.4 15.0393 C 23.4 15.5329 22.9405 15.9331 22.3737 15.9331 H 17.7444 L 13.2193 21 L 11.2869 15.1097 L 9.63266 17.6709 H 1.92624 C 1.35945 17.6709 0.899994 17.2708 0.899994 16.7772 C 0.899994 16.2835 1.35945 15.8834 1.92624 15.8834 H 8.43225 L 11.9093 10.5 Z"/>
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Canvas>
            </Viewbox>
        </ControlTemplate>

        <!--<Style x:Key="Boundary1" TargetType="Border" >
            <Setter Property="Margin" Value="10"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="BorderThickness" Value="10"/>
            <Setter Property="BorderBrush" Value="#2F5082"/>
            <Setter Property="Background" Value="#ffffffff"/>
        </Style>-->

        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" PresentationOptions:Freeze="True"/>
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" PresentationOptions:Freeze="True"/>
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" PresentationOptions:Freeze="True"/>
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" PresentationOptions:Freeze="True"/>
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" PresentationOptions:Freeze="True"/>
        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
      BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
      CornerRadius="0" BorderThickness="1, 1, 1, 1" 
      Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
      CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
      Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
    HorizontalAlignment="Center" Fill="#2F5082"
    VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#2F5082"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxNormalBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxNormalBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxNormalBackgroundBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxNormalBackgroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="#2F5082"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
        ClickMode="Press" Focusable="False"
        IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
        Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                      HorizontalAlignment="Left" VerticalAlignment="Center"                              
                      Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                      ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
             IsReadOnly="{TemplateBinding IsReadOnly}"
             Visibility="Hidden" Background="Transparent"
             HorizontalAlignment="Left" VerticalAlignment="Center"
             Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <Popup Name="Popup" Placement="Bottom"
           Focusable="False" AllowsTransparency="True"
           IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
           PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
            MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
            MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                CornerRadius="0" BorderThickness="1,1,1,1" 
                BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type evokeControls:ThreeDotsLoader}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <!--<Setter Property="MinWidth" Value="70" />
            <Setter Property="MinHeight" Value="20" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type evokeControls:ThreeDotsLoader}">
                        <Viewbox>
                            <Grid Width="70" Height="20" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Ellipse x:Name="PART_Ellipse0" Grid.Column="0" Fill="{TemplateBinding Color}"  />
                                <Ellipse x:Name="PART_Ellipse1" Grid.Column="2" Fill="{TemplateBinding Color}" />
                                <Ellipse x:Name="PART_Ellipse2" Grid.Column="4" Fill="{TemplateBinding Color}" />
                            </Grid>
                        </Viewbox>
                        <ControlTemplate.Resources>
                            <!--<system:Double x:Key="speedRatioValue">{Binding RelativeSource={RelativeSource AncestorType={x:Type evokeControls:ThreeDotsLoader}}</system:Double>-->
                            <!--<model:SpeedRatioDto SpeedRatioValue="{Binding RelativeSource={RelativeSource AncestorType={x:Type evokeControls:ThreeDotsLoader}}" x:Key="speedRatioValue1"/>-->
                            <Style TargetType="Ellipse">
                                <!--<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type evokeControls:ThreeDotsLoader}}, Path=Color}" />-->
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                <Setter Property="Width" Value="20" />
                                <Setter Property="Height" Value="20" />
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0" ScaleY="0" />
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <!--<system:Double x:Key="MyDoubleResource">12</system:Double>-->
                            <!--<Storyboard x:Key="DotAnimation" RepeatBehavior="Forever" SpeedRatio="{StaticResource {TemplateBinding SpeedRatio}}" Duration="0:0:1.900">-->
                            <!-- hard coded speed ratio now-->
                            <Storyboard x:Key="DotAnimation" RepeatBehavior="Forever" SpeedRatio="1" Duration="0:0:1.900">
                                <!--<Storyboard x:Key="DotAnimation" RepeatBehavior="Forever" SpeedRatio="{Binding RelativeSource={RelativeSource AncestorType={x:Type evokeControls:ThreeDotsLoader}}, Path=SpeedRatio}" Duration="0:0:1.900">-->
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.500" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.600" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:1.100" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="0" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.750" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.850" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:1.350" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.500" Value="0" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:1.000" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:1.100" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:1.600" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.500" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.600" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:1.100" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="0" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.750" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.850" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:1.350" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.500" Value="0" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:1.000" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:1.100" Value="1" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:1.600" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                        </ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsLoading" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Name="ThreeDotLoaderBoard" Storyboard="{StaticResource DotAnimation}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="ThreeDotLoaderBoard"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
    
    
</Application>
